# YAML anchors
shared:
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: "v2.9"
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

  - &run-ansible-from-bastion
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: "v2.9"
      run:
        path: /usr/bin/ansible-runner
    run:
      path: /bin/bash
      args:
        - '-exc'
        - |
          # Here is a placeholder to create a static inventory file.
          # In this example we will simply run locally ansible inside the worker.
          cat > inventory.ini <<EOF
          [all]
          localhost ansible_connection=local gather_facts=false
          EOF
          export ANSIBLE_INVENTORY=inventory.ini

          # Run ansible
          /usr/bin/ansible-runner
      caches:
        - path: ansible-playbook/roles
      inputs:
      - name: merged-stack
        path: merged-stack

groups:
- name: overview
  jobs:
  - terraform-plan
  - terraform-apply
  - ansible-run
- name: destroy
  jobs:
  - terraform-destroy

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: cycloid/terraform-resource
    tag: '1.3.9'

resources:
- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ((env))
    backend_type: http
    backend_config:
      address: '((cycloid_api_url))/inventory?jwt=($ inventory_jwt $)'
      skip_cert_verification: true
    vars:
      env: ((env))
      project: ((project))
      organization: ((org))


# Git stack repositories

- name: git_stack-terraform
  icon: github-circle
  type: git
  source:
    uri: ($ scs_url $)
    branch: ($ scs_branch $)
    private_key: ((stack_git_private_key))
    paths:
      - ((stack_path))/terraform/*

- name: git_stack-ansible
  type: git
  icon: github-circle
  source:
    uri: ($ scs_url $)
    branch: ($ scs_branch $)
    private_key: ((stack_git_private_key))
    paths:
      - ((stack_path))/ansible/*

# Git config repositories
- name: git_config-ansible
  type: git
  icon: github-circle
  source:
    uri: ($ cr_url $)
    branch: ($ cr_branch $)
    private_key: ((config_git_private_key))
    paths:
      - ((project))/ansible/environments/((env))-*

- name: git_config-terraform
  type: git
  icon: github-circle
  source:
    uri: ($ cr_url $)
    branch: ($ cr_branch $)
    private_key: ((config_git_private_key))
    paths:
      - ((project))/terraform/((env))/*

jobs:

  - name: terraform-plan
    serial: true
    serial_groups: [terraform]
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack-terraform
          params: {depth: 1}
          trigger: true
        - get: git_config-terraform
          params: {depth: 1}
          trigger: true

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: git_config-terraform
              path: "config"
            - name: git_stack-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((project))/terraform/((env))
            STACK_PATH: ((stack_path))/terraform

        - put: tfstate
          params:
            plan_only: true
            terraform_source: merged-stack/

  - name: terraform-apply
    serial: true
    serial_groups: [terraform]
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack-terraform
          trigger: false
          passed:
            - terraform-plan
        - get: git_config-terraform
          trigger: false
          passed:
            - terraform-plan
        - get: tfstate
          trigger: false
          passed:
            - terraform-plan

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: git_config-terraform
              path: "config"
            - name: git_stack-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((project))/terraform/((env))
            STACK_PATH: ((stack_path))/terraform

        - put: tfstate
          params:
            plan_run: true
            terraform_source: merged-stack/

  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack-terraform
            params: {depth: 1}
            trigger: false
          - get: git_config-terraform
            params: {depth: 1}
            trigger: false
          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
              - name: git_config-terraform
                path: "config"
              - name: git_stack-terraform
                path: "stack"
            params:
              CONFIG_PATH: ((project))/terraform/((env))
              STACK_PATH: ((stack_path))/terraform

          - put: tfstate
            params:
              action: destroy
              terraform_source: merged-stack/
            get_params:
              action: destroy

  - name: ansible-run
    serial: true
    build_logs_to_retain: 10
    plan:
    - do:
      - get: git_stack-ansible
        params: {depth: 1}
        trigger: true

      - get: git_config-ansible
        params: {depth: 1}
        trigger: true

      - get: tfstate
        passed:
          - terraform-apply
        trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-ansible
            path: "config"
          - name: git_stack-ansible
            path: "stack"
          - name: tfstate
            path: "terraform"
        params:
          CONFIG_PATH: ((project))/ansible/
          STACK_PATH: ((stack_path))/ansible

      - task: run-ansible
        <<: *run-ansible-from-bastion
        params:
          # See ansible-runner doc for more details on the following environment variables
          # https://github.com/cycloidio/docker-cycloid-toolkit#ansible-runner
          SSH_PRIVATE_KEY: ((ansible_ssh_private_key_pair))
          # SSH_JUMP_URL: ((bastion_url))
          ANSIBLE_PLAYBOOK_PATH: merged-stack
          ANSIBLE_PLAYBOOK_NAME: site.yml
          ANSIBLE_FORCE_GALAXY: false
          EXTRA_ANSIBLE_VARS:
            org: ((org))
            project: ((project))
            env: ((env))

