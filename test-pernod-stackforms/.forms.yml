version: "2"
use_cases:
- name: windows_azure
  sections:
  - name: Common Informations
    groups:
    - name: Common Informations
      technologies: [pipeline]
      vars:
      - name: "Role"
        description: Server Role
        key: server_role
        widget: dropdown
        type: string
        values: ["APP", "WEB", "DBS", "TST", "JDE", "CTX"]
      - name: "Environment"
        description: "In which environment does the VM will be deploy ?"
        key: environment
        widget: dropdown
        type: string
        values: ["dev", "prod", "uat"]
      - name: "Operating System"
        description: "Which OS do you want to deploy ?"
        key: packer_image
        widget: dropdown
        type: string
        values: ["Windows Server 2022", "Windows Server 2019", "Windows Server 2016"]      
      - name: "VM Size"
        description: 'Which size do you want to use for the VM ? If you need some details about the size, check : https://tinyurl.com/4szasbzn. This is an auto completion widget, you can add the size that you want as long as you type the exact name. '
        key: vm_size
        widget: auto_complete
        type: string
        values:
        - Standard_A2_v2
        - Standard_B2ms
        - Standard_A5
        - Standard_A2m_v2
        - Standard_A4_v2
        - Standard_D4_v3
        - Standard_A4
        - Standard_A8_v2
        - Standard_D8_v3
        - Standard_F16
      - name: Application name
        description: "What is the name of the application that will be deploy on the server ?"
        key: application
        widget: simple_text
        type: string
      - name: Application ID
        description: "What is the Snake ID of the application ? Be carefull, you need to write the exact name of the ID (ex: SNAKE-XXXX)"
        key: snakeid
        widget: simple_text
        type: string
        default: "SNAKE-"
  - name: Regional Settings
    groups:
    - name: Region
      technologies: [pipeline]
      vars:
      - name: Region
        description: In which region do you want to deploy ?
        key: region
        widget: dropdown
        type: string
        values: ["AME", "ASIA", "EMEA", "PAC"]
      - widget: dropdown
        values:
          options:
            - condition: $region == "AME"
              values: ["CAN", "USA", "TRU", "USW", "MEX", "PER", "VEN", "ARG", "BRA", "CHL", "URY", "COL", "DOM", "CSW", "HWS", "GLB"]
            - condition: $region == "ASIA"
              values: ["CHN", "AHQ", "TRA", "JPN", "KOR", "TWN", "THA", "HKG", "PHL", "GLB"]
            - condition: $region == "EMEA"
              values: ["MEA", "FRA", "GLB", "MMP", "ZAF", "SVN", "ESP", "PWS", "TUR", "GRC"]
            - condition: $region == "PAC"
              values: ["AUS", "NZL", "ANZ", "GLB"]
        type: string
        key: affiliate
        name: Affiliate Choice
        description: "In which affiliate do you want to deploy your Virtual Machine ?"
      - name: Azure location
        description: "Where do you want to deploy your virtual resource ?"
        widget: dropdown
        key: azure_location
        type: string
        values:
          options:
            - condition: $region == "EMEA"
              values: ["northeurope", "africasouth"]
            - condition: $region == "AME"
              values: ["canadacentral", "canadacentral"]
            - condition: $region == "PAC"
              values: ["australiaeast", "australiasoutheast"]
            - condition: $region == "ASIA"
              values: ["asiaeast", "asiaeast"]
      - name: Patching Policy
        description: "Which patching policy do you want to use ?"
        key: patching
        type: string
        widget: dropdown
        values:
          options:
            - condition: $region == "PAC"
              values: ["GRP-SRV-ANZ-BC-1M-DELAY-WK2", "GRP-SRV-ANZ-BC-MANUAL-WK2", "GRP-SRV-ANZ-BC-MOSS-WK2", "GRP-SRV-ANZ-BC-SP-WK2", "GRP-SRV-ANZ-BC-WK2", "GRP-SRV-ANZ-BO-1M-DELAY-WK3", "GRP-SRV-ANZ-BO-WK3" ]
            - condition: $region == "EMEA"
              values: ["BO-TUE", "BO-WED", "BO-SAT", "BC-WED", "BC-SAT", "MC-SAT", "MC-SUN"]
            - condition: $region == "AME"
              values: ["TBD"]
            - condition: $region == "ASIA"
              values: ["TBD"]
      - name: Domain Name
        description: "In which domain do you want the VM to be joined ?"
        key: domain_name
        type: string
        widget: dropdown
        values:
          options:
            - condition: $region == "PAC"
              values: ["prwine.pernod-ricard.group", "prwine.pernod-ricard.group"]
            - condition: $region == "AME"
              values: ["pr-americas.pernod-ricard.group", "pr-americas.pernod-ricard.group"]
            - condition: $region == "EMEA"
              values: ["pernod-ricard.group", "pr-eu.pernod-ricard.group", "prholding.pernod-ricard.group", "mmpj.pernod-ricard.group","prwine.pernod-ricard.group","absolut.pernod-ricard.group", "cbl.pernod-ricard.group", "idg.pernod-ricard.group", "PernodSA.pernod-ricard.group", "pr-americas.pernod-ricard.group", "prgasia.pernod-ricard.group", "ricard.pernod-ricard.group"]
            - condition: $region == "ASIA"
              values: ["prasia.pernod-ricard.group", "prasia.pernod-ricard.group"]
      - name: Subscription
        description: In which subscription do you want to deploy ?
        key: azure_subscription_id
        widget: cy_cred
        type: string
        default: ((subcription_lists.EMEA)) 
    - name: Business informations
      technologies: [pipeline]
      condition: $region == "AME"
      vars:
      - name: IT Owner
        description: "Who is the IT owner of this resource ?"
        key: it_owner
        widget: simple_text
        type: string
      - name: Department
        description: "For which department this resource will be for ?"
        key: department
        widget: simple_text
        type: string
    - name: EMEA Settings 
      technologies: [pipeline]
      condition: $region == "EMEA"
      vars:
      - name: "Monitoring"
        description: "Which monitoring policy did you choose ? HO = Opening hours and HNO = 24/7"
        key: monitoring_emea
        widget: dropdown
        type: string
        values: ["HO", "HNO"]
      - name: EMEA Backup Policy
        description: "Which type of retention do you want to use for the backup storage ?"
        key: retention
        widget: dropdown
        type: string
        values: ["Short", "Medium", "Long"]
      - name: EMEA Backup Policies
        description: "Which backup policy do you want to use ?"
        key: backup_policy
        widget: dropdown
        type: string
        values:
          options:
            - condition: $retention == "Short"
              values: ["15 daily at 4 AM", "15 daily at 5 PM", "30 daily at 6 AM", "30 daily at 4 PM"]
            - condition: $retention == "Medium"
              values: ["15 daily, 6 monthly at 2:30 AM", "15 daily, 6 monthly at 4 PM", "30 daily, 6 monthly at 3:30 AM", "30 daily, 6 monthly at 7 PM", "15 daily, 13 monthly at 3 AM", "30 daily, 13 monthly at 5:30 AM", "30 daily, 13 monthly at 8 PM"]
            - condition: $retention == "Long"
              values: ["30 daily, 13 monthly, 3 yearly at midnight", "30 daily, 13 monthly, 5 yearly at 9 PM", "30 daily, 13 monthly, 10 yearly at 1 AM", "30 daily, 13 monthly, 10 yearly at 10:30 PM", "60 daily, 13 monthly, 10 yearly at 10 PM"] 
      - name: IT Owner
        description: "Which IT department own the server ?"
        key: it_department_owner
        widget: dropdown
        type: string
        values: ["EADC", "BCO", "MEDAFR", "CEEE"]
    - name: PAC Backup policy
      technologies: [pipeline]
      condition: $region == "PAC"
      vars:
      - name: "Subscription"
        description: In which subscription do you want to deploy ?
        key: subscription_pac
        widget: dropdown
        type: string
        values: ["PRW-PROD", "PRW-UAT"]
    - name: "PRW-PROD / Prod VM backup Policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-PROD" && $environment == "prod") && ($server_role == "APP" || $server_role == "WEB" || $server_role == "TST"))
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: backup_policy_prod_prod_vm_pac
        type: string
        widget: dropdown
        values: 
        - "VM-PROD-14D"
        - "VM-PROD-2Y"
        - "VM-PROD-3M"
        - "VM-PROD-7Y"
    - name: "PRW-PROD / Prod Databse backup Policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-PROD" && $environment == "prod" && $server_role == "DBS"))
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: backup_policy_prod_prod_dbs_pac
        type: string
        widget: dropdown
        values: 
        - "SQL-PROD-3M"
        - "SQL-PROD-2Y"
        - "SQL-PROD-7Y"
    - name: "PRW-PROD / DEV/UAT VM Backup policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-PROD") && ($environment == "uat" || $environment == "dev") && ($server_role == "APP" || $server_role == "WEB" || $server_role == "TST"))
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_prod_uat_vm_pac
        type: string
        widget: dropdown
        values: 
        - "VM-UA"
        - "VM-UA-3M"
    - name: "PRW-PROD / DEV/UAT Database Backup policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-PROD") && ($environment == "uat" || $environment == "dev" && $server_role == "DBS"))
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_prod_uat_sql_pac
        type: string
        widget: dropdown
        values: 
        - "SQL-UA"
        - "SQL-UA"
        default: "SQL-UA"
    - name: "PRW-UAT / Prod VM Backup policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-UAT" && $environment == "prod") && ($server_role == "APP" || $server_role == "WEB" || $server_role == "TST"))
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_uat_prod_vm_pac
        type: string
        widget: dropdown
        values: 
        - "VM-PROD-7Y"
        - "VM-PROD-3M"
        - "VM-PROD-14D"
        - "VM-PROD-2Y"
    - name: "PRW-UAT / Prod Database backup Policies"
      technologies: [pipeline]
      condition: $region == "PAC" && $subscription_pac == "PRW-UAT" && $environment == "prod" && $server_role == "DBS"
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: backup_policy_uat_prod_sql_pac
        type: string
        widget: dropdown
        values: 
        - "SQL-PROD-2Y"
        - "SQL-PROD-7Y"
        - "SQL-PROD-3M"
    - name: "PRW-UAT / DEV/UAT VM Backup policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-UAT") && ($environment == "uat" || $environment == "dev") && ($server_role == "APP" || $server_role == "WEB" || $server_role == "TST"))
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_uat_uat_vm_pac
        type: string
        widget: dropdown
        values:
        - "VM-UA"
        - "VM-UA"
        default: "VM-UA"
    - name: "PRW-UAT / UAT Database Backup policies"
      technologies: [pipeline]
      condition: (($region == "PAC" && $subscription_pac == "PRW-UAT") && ($environment == "uat" || $environment == "dev") && ($server_role == "DBS"))
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_uat_uat_sql_pac
        type: string
        widget: dropdown
        values: 
        - "SQL-UA"
        - "SQL-UA"
        default: "SQL-UA"
- name: windows_vmware
  sections:
  - name: Basic Configuration
    groups:
  - name: Basic configuration
    groups:
    - name: Instance
      technologies: [pipeline]
      vars:
      - name: "Domain name"
        description: "In which domain do you want to deploy it ?"
        key: domain_name
        type: string
        widget: dropdown
        values: ["pernod-ricard.group", "pr-eu.pernod-ricard.group", "prholding.pernod-ricard.group", "mmpj.pernod-ricard.group","prwine.pernod-ricard.group","absolut.pernod-ricard.group", "cbl.pernod-ricard.group", "idg.pernod-ricard.group", "PernodSA.pernod-ricard.group", "pr-americas.pernod-ricard.group", "prgasia.pernod-ricard.group", "ricard.pernod-ricard.group"]
        default: pernod-ricard.group
      - name: "Affiliate"
        description: "In which affiliate do you need to deploy the vm ? "
        key: affiliate 
        widget: dropdown
        type: string
        values: ["MEA", "FRA", "GLB", "MMP", "ZAF", "SVN", "ESP", "PWS", "TUR", "GRC"]
      - name: "Role"
        description: Server Role
        key: server_role
        widget: dropdown
        type: string
        values: ["APP", "WEB", "DBS", "TST", "JDE", "CTX"]
  - name: Deployment Settings    
    groups:
    - name: Settings
      technologies: [pipeline]   
      vars:
      - name: "Datacenter"
        description: "In which Datacenter do you want to deploy your VM ?"
        key: vsphere_datacenter
        widget: dropdown
        type: string
        values: ["Martell-Cognac", "Rouillac"]
        default: "Martell-Cognac" 
    - name: Vsphere cluster
      technologies: [pipeline]
      condition: "vsphere_datacenter==Martell-Cognac"
      vars:
      - name: Vsphere cluster
        Description: "In which Cluster do you want to deploy your VM ?"
        key: vsphere_cluster
        widget: dropdown
        type: string 
        values: ["DEV01", "PROD01", "FC01"]
        default: "DEV01"
      - name: "Replication"
        description: "Do you need storage replication ?"
        key: storage_replication
        widget: switch
        type: boolean
        default: false
      - name: "Network"
        description: "In which VLAN do you want to deploy it ?"
        key: vsphere_network
        widget: dropdown
        type: string
        values:
        - "vDS-Front-End-Prod"
        - "vDS-Back-End-Prod"
        - "vDS-Database-Dev"
        - "vDS-All-in-One-Prod"
        - "vDS-Front-End-Dev"
        - "vDS-Front-End-UAT"
        - "vDS-Back-End-Dev"
        - "vDS-Back-End-UAT"
        - "vDS-Database-UAT"
        - "vDS-All-in-One-Dev"
        - "vDS-All-in-One-UAT"
        - "vDS-VM DataCenter"
        - "vDS-Database-Prod"
        - "vDS-VLAN_HORS_PROD"
        - "vDS-VLAN_PROD_2"
    - name: Environment and backups
      technologies: [pipeline]
      vars:
        - name: Backup Policy
          description: "What kind of backup retention do you want ?"
          key: retention
          widget: dropdown
          type: string
          values: ["Short", "Medium", "Long"]
          #default: Short
    - name: "Short Backup policies"
      technologies: [pipeline]
      condition: "retention==Short"
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: tag_backup_short
        type: string
        widget: dropdown
        values: 
        - 15 daily at 4 AM
        - 15 daily at 6:30 PM
        - 30 daily at 6 AM
        - 30 daily at 7:30 PM
        default: 15 daily at 4 AM
    - name: "Medium Backup policies"
      technologies: [pipeline]
      condition: "retention==Medium"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: tag_backup_medium
        type: string
        widget: dropdown
        values: 
        - 15 daily, 6 monthly at 2:30 AM
        - 15 daily, 6 monthly at 4 PM
        - 30 daily, 6 monthly at 3:30 AM
        - 30 daily, 6 monthly at 7 PM
        - 15 daily, 13 monthly at 3 AM
        - 30 daily, 13 monthly at 5:30 AM
        - 30 daily, 13 monthly at 8 PM
        default: 15 daily, 6 monthly at 2:30 AM
    - name: "Long Backup policies"
      technologies: [pipeline]
      condition: "retention==Long"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily, monthly and yearly backup."
        key: tag_backup_long
        type: string
        widget: dropdown
        values: 
        - 30 daily, 13 monthly, 3 yearly at midnight
        - 30 daily, 13 monthly, 5 yearly at 9 PM
        - 30 daily, 13 monthly, 10 yearly at 1 AM
        - 30 daily, 13 monthly, 10 yearly at 10:30 PM
        default: 30 daily, 13 monthly, 3 yearly at midnight 
  - name: VM Configuration 
    groups:
    - name: "VM Configuration"
      technologies: [pipeline]
      vars:
      - name: "Operating System"
        description: "Which OS do you want to deploy ?"
        key: vsphere_content_library_ovf
        widget: dropdown
        type: string 
        values: ["windows-server-2019-datacenter", "windows-server-2016-standard"] 
#      - name: Inventory ID
#        description: "Windows Server 2022 = 2, Windows Server 2019 = 3, Windows Server 2016 = 10"
#        key: inventory_id
#        widget: dropdown
#        type: integer
#        values: [2, 3, 10]
#        default: 2
      - name: CPU
        description: "How many CPU does the VM needs ?"
        key: vm_cpus
        widget: slider_list
        type: integer
        values: [1, 2, 4, 8, 16]
        default: 1
      - name: Memory
        description: "How much RAM does the VM needs ? (in MiB)"
        key: vm_memory
        widget: slider_list
        type: integer
        values: [1024, 2048, 4096, 8192, 16384]
        default: 1024
      - name: Disk size
        description: "How much Gb does the VM need for the system ?"
        key: vm_disk_size
        widget: slider_range
        type: integer
        values: [100,150]
        default: 100
  - name: Environment
    groups:
    - name: Environment
      technologies: [pipeline]
      vars:
        - name: Application name
          description: "What is the name of the application that will be deploy on the server ?"
          key: application
          widget: simple_text
          type: string
        - name: "Environment"
          description: "In which environment does the VM will be deploy ?"
          key: tag_environment
          widget: dropdown
          type: string
          values: ["dev", "prod", "uat"]
        - name: "Patching"
          description: "Which patching policy did you choose ?"
          key: tag_patching
          widget: dropdown
          type: string
          values: ["BO-TUE", "BO-WED", "BO-SAT", "BC-WED", "BC-SAT", "MC-SAT", "MC-SUN"]
        - name: "Monitoring"
          description: "Which monitoring policy did you choose ?"
          key: tag_monitoring
          widget: dropdown
          type: string
          values: ["HO", "HNO"]
        - name: Application ID
          description: "What is the Snake ID of the application ? Be carefull, you need to write the exact name of the ID (ex: SNAKE-XXXX)"
          key: tag_snakeid
          widget: simple_text
          type: string
          default: "SNAKE-"
#  - name: Access
#    groups:
#    - name: Vsphere access
#      technologies: [pipeline]
#      vars:
#      - name: "Vsphere username"
#        description: "Service account name account for vsphere connection"
#        key: vsphere_username
#        widget: cy_cred
#        type: string
#        default: "((service-account-awx.username))"
#      - name: "Vsphere password"
#        description: "Service account password account for vsphere connection"
#        key: vsphere_password
#        widget: cy_cred
#        type: string
#        default: "((service-account-awx.password))"
#      - name: "Azure subscription id"
#        description: "The Subscription ID which should be used"
#        key: azure_subscription_id
#        widget: cy_cred
#        type: string
#        default: "((azure.subscription_id))"
#      - name: "Azure tenant id"
#        description: "The Tenant ID which should be used"
#        key: azure_tenant_id
#        widget: cy_cred
#        type: string
#        default: "((azure.tenant_id))"
#      - name: "Azure client id"
#        description: "The Client ID which should be used"
#        key: azure_client_id
#        widget: cy_cred
#        type: string
#        default: "((azure.client_id))"
#      - name: "Azure client secret"
#        description: "The Client Secret which should be used"
#        key: azure_client_secret
#        widget: cy_cred
#        type: string
#        default: "((azure.client_secret))"
#    - name: Object store
#      technologies: [pipeline]
#      vars:
#      - name: "Terraform resource group name"
#        description: "Azure Resource Group of the Storage Account to use to store terraform remote state file."
#        key: terraform_resource_group_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)-terraform"
#      - name: "Terraform storage account name"
#        description: "Azure Storage Account name to use to store terraform remote state file."
#        key: terraform_storage_account_name
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.account_name))"
#      - name: "Terraform storage access key"
#        description: "Azure Storage Account key to use to store terraform remote state file."
#        key: terraform_storage_access_key
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.access_key))"
#      - name: "Terraform storage container name"
#        description: "Azure Storage container name to store terraform remote state file."
#        key: terraform_storage_container_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)"
#      - name: "Terraform storage container path"
#        description: "Azure Storage container path to store terraform remote state file."
#        key: terraform_storage_container_path
#        widget: simple_text
#        type: string
#        default: "($ project $)/($ environment $)"
#      - name: "Private module SSH key"
#        description: "SSH key to use to clone private terraform modules from Git."
#        key: terraform_modules_private_key
#        widget: cy_cred
#        type: string
#        default: ""
#  - name: Git configuration
#    groups:
#    - name: Access
#      technologies: [pipeline]
#      vars:
#      - name: "Code git URL"
#        description: "URL to the Git repository containing terraform source code."
#        key: git_repository
#        widget: simple_text
#        type: string
#        default: "git@github.com:MyUser/code.git"
#      - name: "Code git branch"
#        description: "Branch of the terraform source code Git repository."
#        key: git_branch
#        widget: simple_text
#        type: string
#        default: "master"
#      - name: "Code git key"
#        description: "SSH key pair to fetch terraform source code Git repository."
#        key: git_private_key
#        type: string
#        widget: cy_cred
#        default: "((ssh_config.ssh_key))"
#      - name: "Code terraform path"
#        description: "Path of Terraform files in the git repository."
#        key: git_terraform_path
#        widget: simple_text
#        type: string
#        default: "./"
- name: ubuntu_vmware
  sections:
  - name: Basic configuration
    groups:
    - name: Instance
      technologies: [pipeline]
      vars:
      - name: "VM name"
        description: "What is the name of the VM ?"
        key: vm_name
        widget: simple_text
        type: string
        default: "win-srv-22-cy"
  - name: Deployment settings    
    groups:
    - name: Settings
      technologies: [pipeline]   
      vars:
      - name: "Datacenter"
        description: "In which Datacenter do you want to deploy your VM ?"
        key: vsphere_datacenter
        widget: dropdown
        type: string
        values: ["Martell-Cognac", "Rouillac"]
        default: "Martell-Cognac" 
    - name: Vsphere cluster
      technologies: [pipeline]
      condition: "vsphere_datacenter==Martell-Cognac"
      vars:
      - name: Vsphere cluster
        Description: "In which Cluster do you want to deploy your VM ?"
        key: vsphere_cluster
        widget: dropdown
        type: string 
        values: ["DEV01", "PROD01", "FC01"]
        default: "DEV01"
      - name: "Datastore "
        description: "In which datastore do you want to deploy your VM ?"
        key: vsphere_datastore 
        widget: dropdown
        type: string
        values: 
        - "EADC_DO3K_P10001"
        - "EADC_DO3K_P10002"
        - "EADC_DO3K_P10003"
        - "EADC_DO3K_P10004"
        - "EADC_DO3K_P10005"
        - "EADC_DO3K_P10006"
        - "EADC_DO3K_P10007"
        - "EADC_DO3K_P10008"
        - "EADC_DO3K_P10009"
        - "EADC_DO3K_P10010"
        - "EADC_DO3K_P10011"
        - "EADC_DO3K_P10012"
        - "EADC_DO3K_P10013"
        - "EADC_DO3K_P10014"
        - "EADC_DO3K_P10015"
        - "EADC_DO3K_P10016"
        - "EADC_DO3K_P10017"
        - "EADC_DO3K_P10018"
        - "EADC_DO3K_P10019"
        - "EADC_DO3K_P10020"
        - "EADC_DO3K_P20001"
        - "EADC_DO3K_P20002"
        - "EADC_DO3K_P20003"
        - "EADC_DO3K_P20004"
        - "EADC_DO3K_P20005"
        - "EADC_DO3K_P20006"
        - "EADC_DO3K_P20007"
        - "EADC_DO3K_P20008"
        - "EADC_DO3K_P20009"
        - "EADC_DO3K_P20010"
        - "EADC_DO3K_P20011"
        - "EADC_DO3K_P20012"
        - "EADC_DO3K_P20013"
        - "EADC_DO3K_P20014"
        - "EADC_DO3K_P20015"
        - "EADC_DO3K_P20016"
        - "EADC_DO3K_P20017"
        - "EADC_DO3K_P20018"
        - "EADC_DO3K_P20019"
        - "EADC_DO3K_P20020"
      - name: "Network"
        description: "In which VLAN do you want to deploy it ?"
        key: vsphere_network
        widget: dropdown
        type: string
        values:
        - "vDS-All-in-One-Dev"
        - "vDS-Front-End-Prod"
        - "vDS-Back-End-Prod"
        - "vDS-Database-Dev"
        - "vDS-All-in-One-Prod"
        - "vDS-Front-End-Dev"
        - "vDS-Front-End-UAT"
        - "vDS-Back-End-Dev"
        - "vDS-Back-End-UAT"
        - "vDS-Database-UAT"
        - "vDS-All-in-One-Dev"
        - "vDS-All-in-One-UAT"
        - "vDS-VM DataCenter"
    - name: Environment and backups
      technologies: [pipeline]
      vars:
        - name: Backup Policy
          description: "What kind of backup retention do you want ?"
          key: retention
          widget: dropdown
          type: string
          values: ["Short", "Medium", "Long"]
          #default: Short
    - name: "Short Backup policies"
      technologies: [pipeline]
      condition: "retention==Short"
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: tag_backup_short
        type: string
        widget: dropdown
        values: 
        - 15 daily at 4 AM
        - 15 daily at 6:30 PM
        - 30 daily at 6 AM
        - 30 daily at 7:30 PM
        default: 15 daily at 4 AM
    - name: "Medium Backup policies"
      technologies: [pipeline]
      condition: "retention==Medium"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: tag_backup_medium
        type: string
        widget: dropdown
        values: 
        - 15 daily, 6 monthly at 2:30 AM
        - 15 daily, 6 monthly at 4 PM
        - 30 daily, 6 monthly at 3:30 AM
        - 30 daily, 6 monthly at 7 PM
        - 15 daily, 13 monthly at 3 AM
        - 30 daily, 13 monthly at 5:30 AM
        - 30 daily, 13 monthly at 8 PM
        default: 15 daily, 6 monthly at 2:30 AM
    - name: "Long Backup policies"
      technologies: [pipeline]
      condition: "retention==Long"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily, monthly and yearly backup."
        key: tag_backup_long
        type: string
        widget: dropdown
        values: 
        - 30 daily, 13 monthly, 3 yearly at midnight
        - 30 daily, 13 monthly, 5 yearly at 9 PM
        - 30 daily, 13 monthly, 10 yearly at 1 AM
        - 30 daily, 13 monthly, 10 yearly at 10:30 PM
        default: 30 daily, 13 monthly, 3 yearly at midnight
  - name: VM Configuration
    groups:
    - name: VM Configuration
      technologies: [pipeline]
      vars:      
      - name: RAM
        description: "How much RAM does the VM needs ?"
        key: vm_memory
        widget: slider_list
        type: integer
        values: [1024, 2048, 4096, 8192]
        default: 1024
      - name: CPU
        description: "How much CPU does the VM Needs ?"
        key: vm_cpus
        widget: slider_list
        type: integer
        values: [1, 2, 4, 6, 8, 12]
        default: 2
      - name: Disk size
        description: "How much Gb does the VM need for the system ?"
        key: vm_disk_size
        widget: slider_range
        type: integer
        values: [60,150]
        default: 60  
  - name: Environment
    groups:
    - name: Environment
      technologies: [pipeline]
      vars:
        - name: "Environment"
          description: "In which environment does the VM will be deploy ?"
          key: tag_environment
          widget: dropdown
          type: string
          values: ["DEV", "PROD", "UAT"]
        - name: "Patching"
          description: "Which patching policy did you choose ?"
          key: tag_patching
          widget: dropdown
          type: string
          values: ["BO-TUE", "BO-WED", "BO-SAT", "BC-WED", "BC-SAT", "MC-SAT", "MC-SUN"]
        - name: "Monitoring"
          description: "Which monitoring policy did you choose ?"
          key: tag_monitoring
          widget: dropdown
          type: string
          values: ["HO", "HNO"]
        - name: Application ID
          description: "What is the Snake ID of the application ? Be carefull, you need to write the exact name of the ID (ex: SNAKE-XXXX)"
          key: snakeid
          widget: simple_text
          type: string
          default: "SNAKE-"
#  - name: Access
#    groups:
#    - name: Vsphere access
#      technologies: [pipeline]
#      vars:
#      - name: "Vsphere username"
#        description: "Service account name account for vsphere connection"
#        key: vsphere_username
#        widget: cy_cred
#        type: string
#        default: "((service-account-awx.username))"
#      - name: "Vsphere password"
#        description: "Service account password account for vsphere connection"
#        key: vsphere_password
#        widget: cy_cred
#        type: string
#        default: "((service-account-awx.password))"
#      - name: "Azure subscription id"
#        description: "The Subscription ID which should be used"
#        key: azure_subscription_id
#        widget: cy_cred
#        type: string
#        default: "((azure.subscription_id))"
#      - name: "Azure tenant id"
#        description: "The Tenant ID which should be used"
#        key: azure_tenant_id
#        widget: cy_cred
#        type: string
#        default: "((azure.tenant_id))"
#      - name: "Azure client id"
#        description: "The Client ID which should be used"
#        key: azure_client_id
#        widget: cy_cred
#        type: string
#        default: "((azure.client_id))"
#      - name: "Azure client secret"
#        description: "The Client Secret which should be used"
#        key: azure_client_secret
#        widget: cy_cred
#        type: string
#        default: "((azure.client_secret))"
#      - name: "SSH Key"
#        description: "The SSH key of the VM"
#        key: private_key
#        widget: cy_cred
#        type: string
#        default: "((ssh_key_vmware.ssh_key))"
#      - name: "VM user name"
 #       description: "The name of the user on the VM"
#        key: remote_user
 #       widget: simple_text
#        type: string
#        default: "terraform"
#    - name: Object store
#      technologies: [pipeline]
#      vars:
#      - name: "Terraform resource group name"
#        description: "Azure Resource Group of the Storage Account to use to store terraform remote state file."
#        key: terraform_resource_group_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)-terraform"
#      - name: "Terraform storage account name"
#        description: "Azure Storage Account name to use to store terraform remote state file."
#        key: terraform_storage_account_name
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.account_name))"
 #     - name: "Terraform storage access key"
#        description: "Azure Storage Account key to use to store terraform remote state file."
#        key: terraform_storage_access_key
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.access_key))"
#      - name: "Terraform storage container name"
#        description: "Azure Storage container name to store terraform remote state file."
#        key: terraform_storage_container_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)"
#      - name: "Terraform storage container path"
#        description: "Azure Storage container path to store terraform remote state file."
#        key: terraform_storage_container_path
#        widget: simple_text
#        type: string
#        default: "($ project $)/($ environment $)"
#      - name: "Private module SSH key"
#        description: "SSH key to use to clone private terraform modules from Git."
#        key: terraform_modules_private_key
#        widget: cy_cred
#        type: string
#        default: ""
#  - name: Git configuration
#    groups:
#    - name: Access
#      technologies: [pipeline]
#      vars:
#      - name: "Code git URL"
#        description: "URL to the Git repository containing terraform source code."
#        key: git_repository
#        widget: simple_text
#        type: string
#        default: "git@github.com:MyUser/code.git"
#      - name: "Code git branch"
#        description: "Branch of the terraform source code Git repository."
#        key: git_branch
#        widget: simple_text
#        type: string
#        default: "master"
##      - name: "Code git key"
#        description: "SSH key pair to fetch terraform source code Git repository."
#        key: git_private_key
#        type: string
#        widget: cy_cred
#        default: "((ssh_config.ssh_key))"
#      - name: "Code terraform path"
#        description: "Path of Terraform files in the git repository."
#        key: git_terraform_path
#        widget: simple_text
#        type: string
#        default: "./"
- name: ubuntu_azure
  sections:
  - name: Basics Configuration
    groups:
    - name: Basic Configuration
      technologies: [pipeline]
      vars:
      - name: "Azure subscription id"
        description: "The Subscription ID which should be used"
        key: azure_subscription_id
        widget: cy_cred
        type: string
        default: ((subcription_lists.Compute-LAB))
      - name: "Affiliate"
        description: "In which affiliate do you need to deploy the vm ? "
        key: affiliate 
        widget: dropdown
        type: string
        values: ["MEA", "FRA", "GLB", "MMP", "ZAF", "SVN", "ESP", "PWS", "TUR", "GRC"]
      - name: "Azure location"
        description: "What is the region ?"
        key: azure_location
        widget: dropdown
        type: string
        values: ["northeurope", "southafricanorth"]
      - name: "Role"
        description: Server Role
        key: server_role
        widget: dropdown
        type: string
        values: ["APP", "WEB", "DBS", "TST", "JDE", "CTX"]
      - name: "VM user name"
        description: "The name of the user on the VM"
        key: remote_user
        widget: simple_text
        type: string
        default: "terraform"   
  - name: Deployment settings
    groups:
    - name: Settings
      technologies: [pipeline]
      vars:
    - name: Backup Policy
      technologies: [pipeline]
      vars:
        - name: Backup Policy
          description: "What kind of backup retention do you want ?"
          key: retention
          widget: dropdown
          type: string
          values: ["Short", "Medium", "Long"]
          #default: Short
    - name: "Short Backup policies"
      technologies: [pipeline]
      condition: "retention==Short"
      vars:
      - name: Backup Policies
        description: "Those are short backup policies. It means that the retention of the daily backups is between 15 and 30 days."
        key: backup_policy_short
        type: string
        widget: dropdown
        values: 
        - 15 daily at 4 AM
        - 15 daily at 5 PM
        - 30 daily at 6 AM
        - 30 daily at 4 PM
        default: 15 daily at 4 AM
    - name: "Medium Backup policies"
      technologies: [pipeline]
      condition: "retention==Medium"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily backup and the monthly backups."
        key: backup_policy_medium
        type: string
        widget: dropdown
        values: 
        - 15 daily, 6 monthly at 2:30 AM
        - 15 daily, 6 monthly at 4 PM
        - 30 daily, 6 monthly at 3:30 AM
        - 30 daily, 6 monthly at 7 PM
        - 15 daily, 13 monthly at 3 AM
        - 30 daily, 13 monthly at 5:30 AM
        - 30 daily, 13 monthly at 8 PM
        default: 15 daily, 6 monthly at 2:30 AM
    - name: "Long Backup policies"
      technologies: [pipeline]
      condition: "retention==Long"
      vars:
      - name: Backup Policies
        description: "Those are medium backup policies. It means that you can chose the retention of the daily, monthly and yearly backup."
        key: backup_policy_long
        type: string
        widget: dropdown
        values: 
        - 30 daily, 13 monthly, 3 yearly at midnight
        - 30 daily, 13 monthly, 5 yearly at 9 PM
        - 30 daily, 13 monthly, 10 yearly at 1 AM
        - 30 daily, 13 monthly, 10 yearly at 10:30 PM
        - 60 daily, 13 monthly, 10 yearly at 10 PM
        default: 30 daily, 13 monthly, 3 yearly at midnight
  - name: Environment
    groups:
    - name: Environment
      technologies: [pipeline]
      vars:
        - name: Application name
          description: "What is the name of the application that will be deploy on the server ?"
          key: application
          widget: simple_text
          type: string
        - name: "Environment"
          description: "In which environment does the VM will be deploy ?"
          key: environment
          widget: dropdown
          type: string
          values: ["dev", "prod", "uat"]
        - name: "Patching"
          description: "Which patching policy did you choose ?"
          key: patching
          widget: dropdown
          type: string
          values: ["BO-TUE", "BO-WED", "BO-SAT", "BC-WED", "BC-SAT", "MC-SAT", "MC-SUN"]
        - name: "Monitoring"
          description: "Which monitoring policy did you choose ?"
          key: monitoring
          widget: dropdown
          type: string
          values: ["HO", "HNO"]
        - name: Application ID
          description: "What is the Snake ID of the application ? Be carefull, you need to write the exact name of the ID (ex: SNAKE-XXXX)"
          key: snakeid
          widget: simple_text
          type: string
          default: "SNAKE-"
  - name: VM Configuration
    groups:
    - name: VM Configuration
      technologies: [pipeline]
      vars:
      - name: "VM Size"
        description: 'Which size do you want to use for the VM ? If you need some details about the size, check : https://tinyurl.com/4szasbzn. This is an auto completion widget, you can add the size that you want as long as you type the exact name. '
        key: vm_size
        widget: auto_complete
        type: string
        values:
        - Standard_A2_v2
        - Standard_B2ms
        - Standard_A5
        - Standard_A2m_v2
        - Standard_A4_v2
        - Standard_D4_v3
        - Standard_A4
        - Standard_A8_v2
        - Standard_D8_v3
        - Standard_F16    
#  - name: Cloud provider
#    groups:
#    - name: Azure access
#      technologies: [pipeline]
#      vars:
#      - name: "Azure subscription id"
#        description: "The Subscription ID which should be used"
#        key: azure_subscription_id
#        widget: cy_cred
#        type: string
#        default: "((azure.subscription_id))"
#      - name: "Azure environment"
#        description: "The Cloud Environment which should be used"
#        key: azure_env
#        widget: dropdown
#        type: string
#        values:
#        - public
#        - china
#        - german
#        - usgovernment
#        default: public
#      - name: "Azure location"
#        key: azure_location
#        widget: auto_complete
#        type: string
#        values: [eastasia,southeastasia,centralus,eastus,eastus2,westus,northcentralus,southcentralus,northeurope,westeurope,japanwest,japaneast,brazilsouth,australiaeast,australiasoutheast,southindia,centralindia,westindia,canadacentral,canadaeast,uksouth,ukwest,westcentralus,westus2,koreacentral,koreasouth,francecentral,francesouth,australiacentral,australiacentral2,uaecentral,uaenorth,southafricanorth,southafricawest,switzerlandnorth,switzerlandwest,germanynorth,germanywestcentral,norwaywest,norwayeast]
#        default: westeurope
#    - name: Object store
#      technologies: [pipeline]
#      vars:
#      - name: "Terraform resource group name"
#        description: "Azure Resource Group of the Storage Account to use to store terraform remote state file."
#        key: terraform_resource_group_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)-terraform"
#      - name: "Terraform storage account name"
#        description: "Azure Storage Account name to use to store terraform remote state file."
#        key: terraform_storage_account_name
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.account_name))"
#      - name: "Terraform storage access key"
#        description: "Azure Storage Account key to use to store terraform remote state file."
#        key: terraform_storage_access_key
#        widget: cy_cred
#        type: string
#        default: "((azure_storage.access_key))"
#      - name: "Terraform storage container name"
#        description: "Azure Storage container name to store terraform remote state file."
#        key: terraform_storage_container_name
#        widget: simple_text
#        type: string
#        default: "($ organization_canonical $)"
#      - name: "Terraform storage container path"
#        description: "Azure Storage container path to store terraform remote state file."
#        key: terraform_storage_container_path
#        widget: simple_text
#        type: string
#        default: "($ project $)/($ environment $)"
#      - name: "Private module SSH key"
#        description: "SSH key to use to clone private terraform modules from Git."
#        key: terraform_modules_private_key
#        widget: cy_cred
#        type: string
#        default: ""
#  - name: Git configuration
#    groups:
#    - name: Access
#      technologies: [pipeline]
#      vars:
#      - name: "Code git URL"
#        description: "URL to the Git repository containing terraform source code."
#        key: git_repository
#        widget: simple_text
#        type: string
#        default: "git@github.com:MyUser/code.git"
#      - name: "Code git branch"
#        description: "Branch of the terraform source code Git repository."
#        key: git_branch
#        widget: simple_text
#        type: string
#        default: "master"
#      - name: "Code git key"
#        description: "SSH key pair to fetch terraform source code Git repository."
#        key: git_private_key
#        type: string
#        widget: cy_cred
#        default: "((ssh_config.ssh_key))"
#      - name: "Code terraform path"
#        description: "Path of Terraform files in the git repository."
#        key: git_terraform_path
#        widget: simple_text
#        type: string
#        default: "./"
#      - name: "ssh key" 
#        description: "The SSH key of the VM"
#        key: private_key
#        widget: cy_cred
#        type: string
#        default: "((ssh_key_vmware.ssh_key))"