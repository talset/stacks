# YAML anchors
shared:

  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: v2.7
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

#resources:
- name: git_stack
  type: git
  check_every: 2m
  source:
    uri: ((git_repository))
    branch: stacks
    private_key: ((git_ssh_key))
    paths:
      - stack-ec2/terraform/*

- name: tfstate
  type: terraform
  source:
    env_name: ((env))
    backend_type: s3
    backend_config:
      bucket: ((terraform_storage_bucket_name))
      key: ((terraform_storage_bucket_path))/terraform.tfstate
      region: ((aws_default_region))
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
    vars:
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
      aws_region: ((aws_default_region))
      env: ((env))
      project: ((project))
      customer: ((customer))

groups:
  - name: all
    jobs:
    - terraform-plan

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: '0.11.13'

jobs:

  - name: terraform-plan
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
    - do:
      - get: git_stack
        trigger: true
      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_stack
            path: "stack"
        params:
          CONFIG_PATH: ((project))/terraform/((env))
          STACK_PATH: stack-ec2/terraform

      - put: tfstate
        params:
          env_name: ((env))
          plan_only: true
          terraform_source: merged-stack/
